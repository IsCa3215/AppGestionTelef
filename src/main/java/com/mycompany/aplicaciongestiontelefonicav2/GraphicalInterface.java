/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.aplicaciongestiontelefonicav2;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.String.valueOf;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author EDX
 */
public class GraphicalInterface extends javax.swing.JFrame {

    DefaultTableModel tblModel;
    GestionarLineas gestionar = new GestionarLineas(this, true);

    private ArrayList<LineaTelefono> lineasTelefonicas = new ArrayList<>();

    /**
     * Creates new form GraphicalInterface
     */
    public GraphicalInterface() {
        initComponents();
        tblModel = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmArchivo = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jmEditar = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jmiMostrarNumero = new javax.swing.JMenuItem();
        jmiMostarNombreTitular = new javax.swing.JMenuItem();
        jmiMostrarFechaPermanencia = new javax.swing.JMenuItem();
        jmiModificarContraseña = new javax.swing.JMenuItem();
        jmiRealizarLlamada = new javax.swing.JMenuItem();
        jmiConsultarLlamadas = new javax.swing.JMenuItem();
        jmiConsultarGastoTotal = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jbAñadirArchivo = new javax.swing.JMenuItem();
        jmExportarLinea = new javax.swing.JMenuItem();
        jmAyuda = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestión Telefónica V2");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Lista de líneas telefónicas");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "DNI", "Numero tlf", "Tarifa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jmArchivo.setBackground(new java.awt.Color(0, 102, 0));
        jmArchivo.setText("Archivo");

        jMenuItem1.setText("Añadir usuario");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jmArchivo.add(jMenuItem1);

        jMenuItem2.setText("Eliminar Usuario");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jmArchivo.add(jMenuItem2);

        jMenuBar1.add(jmArchivo);

        jmEditar.setText("Editar");

        jMenu4.setText("Modificar usuario");

        jmiMostrarNumero.setText("Mostrar Numero Teléfono");
        jmiMostrarNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMostrarNumeroActionPerformed(evt);
            }
        });
        jMenu4.add(jmiMostrarNumero);

        jmiMostarNombreTitular.setText("Mostrar nombre del titular");
        jmiMostarNombreTitular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMostarNombreTitularActionPerformed(evt);
            }
        });
        jMenu4.add(jmiMostarNombreTitular);

        jmiMostrarFechaPermanencia.setText("Mostrar fecha de permanencia");
        jmiMostrarFechaPermanencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMostrarFechaPermanenciaActionPerformed(evt);
            }
        });
        jMenu4.add(jmiMostrarFechaPermanencia);

        jmiModificarContraseña.setText("Modificar contraseña");
        jmiModificarContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiModificarContraseñaActionPerformed(evt);
            }
        });
        jMenu4.add(jmiModificarContraseña);

        jmiRealizarLlamada.setText("Realizar una llamada");
        jmiRealizarLlamada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRealizarLlamadaActionPerformed(evt);
            }
        });
        jMenu4.add(jmiRealizarLlamada);

        jmiConsultarLlamadas.setText("Consultar llamadas");
        jmiConsultarLlamadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultarLlamadasActionPerformed(evt);
            }
        });
        jMenu4.add(jmiConsultarLlamadas);

        jmiConsultarGastoTotal.setText("Consultar gasto total");
        jmiConsultarGastoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultarGastoTotalActionPerformed(evt);
            }
        });
        jMenu4.add(jmiConsultarGastoTotal);

        jmEditar.add(jMenu4);

        jMenuBar1.add(jmEditar);

        jMenu3.setText("Añadir");

        jbAñadirArchivo.setText("Añadir archivo");
        jbAñadirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAñadirArchivoActionPerformed(evt);
            }
        });
        jMenu3.add(jbAñadirArchivo);

        jmExportarLinea.setText("Exportar Línea");
        jmExportarLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmExportarLineaActionPerformed(evt);
            }
        });
        jMenu3.add(jmExportarLinea);

        jMenuBar1.add(jMenu3);

        jmAyuda.setText("Ayuda");
        jMenuBar1.add(jmAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        gestionar.setVisible(true);
        if (gestionar.aceptado()) {
            gestionar.setVisible(false);
            String nombre = gestionar.getJtfTitular();
            String dni = gestionar.getJtfNif();
            String numero = gestionar.getJtfNumeroTlf();
            TarifaTelefonica tarifa = gestionar.getTarifa();
            String contraseña = gestionar.getPasswd();
            int limite = gestionar.getJtfLimiteGasto();
            String data[] = {nombre, dni, numero, tarifa.toString()};
            LineaTelefono Linea = new LineaTelefono(nombre, dni, contraseña, limite, numero, tarifa);
            lineasTelefonicas.add(Linea);
            tblModel.addRow(data);
            jTable1.updateUI();
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        tblModel.removeRow(jTable1.getSelectedRow());
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jmiMostrarNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMostrarNumeroActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada != -1 && !lineasTelefonicas.isEmpty()) {
            // Obtiene el modelo de la tabla
            LineaTelefono linea = lineasTelefonicas.get(filaSeleccionada);
            String numero = linea.getNumeroTelefono();
            JOptionPane.showMessageDialog(this, "El número de teléfono es: " + numero, "Número de Teléfono", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una línea telefónica.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmiMostrarNumeroActionPerformed

    private void jmiMostarNombreTitularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMostarNombreTitularActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada != -1 && !lineasTelefonicas.isEmpty()) {
            LineaTelefono linea = lineasTelefonicas.get(filaSeleccionada);
            String nombre = linea.getTitular();
            JOptionPane.showMessageDialog(rootPane, "El titular de la línea es: " + nombre, "Titular de la línea:", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una línea telefónica.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmiMostarNombreTitularActionPerformed

    private void jmiMostrarFechaPermanenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMostrarFechaPermanenciaActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada != -1 && !lineasTelefonicas.isEmpty()) {
            LineaTelefono linea = lineasTelefonicas.get(filaSeleccionada);
            int permanencia = linea.getAñoPermanencia();
            JOptionPane.showMessageDialog(rootPane, "Su fecha de permanencia es de: " + permanencia, "Permanencia", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una línea telefónica.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmiMostrarFechaPermanenciaActionPerformed

    private void jmiModificarContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiModificarContraseñaActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
        ModificarDialog modificar = new ModificarDialog(this, true, 1);
        if (filaSeleccionada != -1 && !lineasTelefonicas.isEmpty()) {
            LineaTelefono linea = lineasTelefonicas.get(filaSeleccionada);
            modificar.setVisible(true);
            if (linea.setContraseña(modificar.getjTextField1()) && modificar.getAceptar()) {
                JOptionPane.showMessageDialog(rootPane, "La contraseña se ha modificado correctamente" + linea.getContraseña(), "Modificar Contraseña", JOptionPane.INFORMATION_MESSAGE);
            } else if (!modificar.getAceptar()) {
                JOptionPane.showMessageDialog(this, "Se ha cancelado la operación", "Error", JOptionPane.ERROR_MESSAGE);
                modificar.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "La contraseña no cumple los requisitos", "Error", JOptionPane.ERROR_MESSAGE);
                modificar.setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una línea telefónica.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmiModificarContraseñaActionPerformed

    private void jmiRealizarLlamadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRealizarLlamadaActionPerformed
        RealizarLlamada llamadinha = new RealizarLlamada(this, true);
        llamadinha.setVisible(true);
        if (llamadinha.getAceptado()) {
            int filaSeleccionada = jTable1.getSelectedRow();
            if (filaSeleccionada != -1 && !lineasTelefonicas.isEmpty()) {
                LineaTelefono linea = lineasTelefonicas.get(filaSeleccionada);

                if (linea.llamar(Integer.parseInt(llamadinha.getjTextField2()), llamadinha.getjTextField1())) {
                    JOptionPane.showMessageDialog(rootPane, "La llamada se ha realizado correctamente a: " + llamadinha.getjTextField1(), "Llamada realizada", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "El coste de la llamada supera el limite de gasto de la tarifa " + linea.getLimite(), "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Por favor, selecciona una línea telefónica.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jmiRealizarLlamadaActionPerformed

    private void jmiConsultarLlamadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultarLlamadasActionPerformed

        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada != -1 && !lineasTelefonicas.isEmpty()) {
            LineaTelefono linea = lineasTelefonicas.get(filaSeleccionada);

            jdListaLlamadas listaLlamadas = new jdListaLlamadas(this, true, linea);
            listaLlamadas.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una línea telefónica.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jmiConsultarLlamadasActionPerformed

    private void jmiConsultarGastoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultarGastoTotalActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada != -1 && !lineasTelefonicas.isEmpty()) {
            LineaTelefono linea = lineasTelefonicas.get(filaSeleccionada);
            JOptionPane.showMessageDialog(this, "Has gastado en la línea un total de: " + linea.gastado(), "Total gastado", JOptionPane.INFORMATION_MESSAGE);

        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una línea telefónica.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmiConsultarGastoTotalActionPerformed

    private void jbAñadirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAñadirArchivoActionPerformed
        JFileChooser selector = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("TEXT FILES", "txt", "text", "xml");
        selector.addChoosableFileFilter(filtro);
        String line = null;
        ArrayList<LineaTelefono> valores = new ArrayList<>();
        int seleccion = selector.showOpenDialog(null);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File seleccionField = selector.getSelectedFile();
            String path = seleccionField.getAbsolutePath();
            try {
                String nombre = null;
                String nif = null;
                String numero = null;
                String contraseña = null;
                int limite = 0;
                int mes = 0;
                int año = 0;
                TarifaTelefonica tarifa = null;
                int llamadas = 0;
                boolean dentroTelef = false;

                FileReader fs = new FileReader(path);
                BufferedReader bs = new BufferedReader(fs);
                while ((line = bs.readLine()) != null) {
                    if (line.startsWith("[phonelist")) {
                        dentroTelef = false;
                    } else if (line.startsWith("[Llamada")) {
                        dentroTelef = false;
                    } else if (line.startsWith("[phone")) {
                        dentroTelef = true;
                        nombre = null;
                        nif = null;
                        numero = null;
                        contraseña = null;
                        limite = 0;
                        mes = 0;
                        año = 0;
                        tarifa = null;
                        llamadas = 0;
                    } else if (dentroTelef) {
                        if (line.startsWith("nombre=")) {
                            nombre = line.substring(7);
                        } else if (line.startsWith("nif=")) {
                            nif = line.substring(4);
                        } else if (line.startsWith("numero=")) {
                            numero = line.substring(7);
                        } else if (line.startsWith("contraseña=")) {
                            contraseña = line.substring(11);
                        } else if (line.startsWith("limite=")) {
                            limite = Integer.parseInt(line.substring(7));
                        } else if (line.startsWith("mes=")) {
                            mes = Integer.parseInt(line.substring(4));
                        } else if (line.startsWith("año=")) {
                            año = Integer.parseInt(line.substring(4));
                        } else if (line.startsWith("tarifa=")) {
                            switch (line.substring(7)) {
                                case "BASICA":
                                    tarifa = TarifaTelefonica.BASICA;
                                    break;
                                case "NORMAL":
                                    tarifa = TarifaTelefonica.NORMAL;
                                    break;
                                case "PREMIUM":
                                    tarifa = TarifaTelefonica.PREMIUM;
                            }
                        } else if (line.startsWith("llamadas=")) {
                            Integer.parseInt(line.substring(9));
                        }
                    }
                    if (nombre != null && nif != null && numero != null && contraseña != null && limite != 0 && mes != 0 && año != 0 && tarifa != null) {
                        LineaTelefono linea = new LineaTelefono(nombre, nif, contraseña, limite, numero, tarifa);
                        lineasTelefonicas.add(linea);
                        
                        nombre = null;
                        nif = null;
                        numero = null;
                        contraseña = null;
                        limite = 0;
                        mes = 0;
                        año = 0;
                        tarifa = null;
                        llamadas = 0;
                    }
                }
                System.out.println(lineasTelefonicas.size());
                for (LineaTelefono linea : lineasTelefonicas) {
                    String data[] = {linea.getTitular(), linea.getNif(), linea.getNumeroTelefono(), linea.getTarifa().toString()};
                    tblModel.addRow(data);
                }
                jTable1.updateUI();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GraphicalInterface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GraphicalInterface.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jbAñadirArchivoActionPerformed

    private void jmExportarLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmExportarLineaActionPerformed
        File file = new File("LineasTelefonicas.txt");
        System.out.println(file.getAbsolutePath());
        if (!file.exists()) {
            try {
                file.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(GraphicalInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        PrintWriter salida = null;
        BufferedWriter buffer = null;
        String linea;
        int i = 0;
        try {
            buffer = new BufferedWriter(new FileWriter(file, true));
            salida = new PrintWriter(buffer);
            salida.println("[phonelist" + lineasTelefonicas.size() + "]");
            for (LineaTelefono lineas : lineasTelefonicas) {

                salida.println("[phone" + i + "]");
                i++;

                salida.println("nombre=" + lineas.getTitular());
                salida.println("nif=" + lineas.getNif());
                salida.println("numero=" + lineas.getNumeroTelefono());
                salida.println("contraseña=" + lineas.getContraseña());
                salida.println("limite=" + lineas.getLimite());
                salida.println("mes=" + lineas.getMesPermanencia());
                salida.println("año=" + lineas.getAñoPermanencia());
                salida.println("tarifa=" + lineas.getTarifa());
                salida.println("llamadas=" + valueOf(lineas.getArrLlamadas().size()));
                ArrayList<Llamada> arrLlamadas = lineas.getArrLlamadas();
                salida.println("[Llamada" + arrLlamadas.size() + "]");
                for (Llamada llamadas : arrLlamadas) {
                    for (int e = 1; e < arrLlamadas.size(); e++) {
                        salida.println("[Llamada" + e + "]");
                    }
                    salida.println((char) llamadas.getDuracion());
                    salida.println(llamadas.getDestino());
                    salida.println(llamadas.getFecha());
                }

            }
            salida.flush();
            salida.close();
        } catch (IOException ex) {
            Logger.getLogger(GraphicalInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmExportarLineaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphicalInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphicalInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphicalInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphicalInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraphicalInterface().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem jbAñadirArchivo;
    private javax.swing.JMenu jmArchivo;
    private javax.swing.JMenu jmAyuda;
    private javax.swing.JMenu jmEditar;
    private javax.swing.JMenuItem jmExportarLinea;
    private javax.swing.JMenuItem jmiConsultarGastoTotal;
    private javax.swing.JMenuItem jmiConsultarLlamadas;
    private javax.swing.JMenuItem jmiModificarContraseña;
    private javax.swing.JMenuItem jmiMostarNombreTitular;
    private javax.swing.JMenuItem jmiMostrarFechaPermanencia;
    private javax.swing.JMenuItem jmiMostrarNumero;
    private javax.swing.JMenuItem jmiRealizarLlamada;
    // End of variables declaration//GEN-END:variables
}
