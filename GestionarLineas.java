/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.aplicaciongestiontelefonicav2;

import com.mycompany.aplicaciongestiontelefonicav2.ModeloLineaTelefonica;
import static com.mycompany.aplicaciongestiontelefonicav2.TipoTelefono.COSTE_ADICIONAL;
import static com.mycompany.aplicaciongestiontelefonicav2.TipoTelefono.COSTE_COMPARTIDO;
import static com.mycompany.aplicaciongestiontelefonicav2.TipoTelefono.FIJO;
import static com.mycompany.aplicaciongestiontelefonicav2.TipoTelefono.GRATUITO;
import static com.mycompany.aplicaciongestiontelefonicav2.TipoTelefono.MOVIL;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author EDX
 */
public class GestionarLineas extends javax.swing.JDialog {
    private boolean aceptado = false;
private TarifaTelefonica tarifa;
private ModeloLineaTelefonica LineaTelefonica;
private LineaTelefono lineaTelefono;
    /**
     * Creates new form GestionarUsuarios
     */
    public GestionarLineas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbAceptar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfTitular = new javax.swing.JTextField();
        jtfNif = new javax.swing.JTextField();
        jtfPasswd = new javax.swing.JTextField();
        jtfLimiteGasto = new javax.swing.JTextField();
        jtfNumeroTlf = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jbAceptar.setText("Aceptar");
        jbAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAceptarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Titular");

        jLabel2.setText("NIF");

        jLabel3.setText("Contraseña");

        jLabel4.setText("limite de gasto");

        jLabel5.setText("numero de tlf");

        jLabel6.setText("Tarifa");

        jtfNif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNifActionPerformed(evt);
            }
        });

        jtfLimiteGasto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfLimiteGastoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Añadir Linea telefónica");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BASICA", "NORMAL", "PREMIUM" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jtfPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfLimiteGasto, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfNif, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfTitular, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jtfNumeroTlf, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbAceptar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbCancelar)))
                        .addGap(26, 26, 26))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfTitular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfNif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jtfPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jtfLimiteGasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jtfNumeroTlf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAceptar)
                    .addComponent(jbCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAceptarActionPerformed
        if(!verificarTitular(jtfTitular.getText())){
            JOptionPane.showMessageDialog(rootPane, "No se ha introducido un nombre de titular válido", "ERROR", JOptionPane.ERROR_MESSAGE);
       } else if(!verificarNif(jtfNif.getText())){
           JOptionPane.showMessageDialog(rootPane, "No se ha introducido un NIF válido", "ERROR", JOptionPane.ERROR_MESSAGE);
       } else if (!verificarPasswd(jtfPasswd.getText())){
           JOptionPane.showMessageDialog(rootPane, "No se ha introducido un NIF válido", "ERROR", JOptionPane.ERROR_MESSAGE);
       } else if(!verificarLimite(Integer.parseInt(jtfLimiteGasto.getText()))){
            JOptionPane.showMessageDialog(rootPane, "No se ha introducido un NIF válido", "ERROR", JOptionPane.ERROR_MESSAGE);
       }  else if(!verificarNumero(jtfNumeroTlf.getText())){
             JOptionPane.showMessageDialog(rootPane, "No se ha introducido un NIF válido", "ERROR", JOptionPane.ERROR_MESSAGE);
       } else {
           JOptionPane.showMessageDialog(rootPane, "Tu tipo de tlf es: "+comprobarNumeroTelefono(jtfNumeroTlf.getText()), "Correcto", JOptionPane.INFORMATION_MESSAGE);
       }
       this.lineaTelefono = new LineaTelefono(jtfTitular.getText(),jtfNif.getText(),jtfPasswd.getText(),Integer.parseInt(jtfLimiteGasto.getText()),jtfNumeroTlf.getText(), this.tarifa );
        this.aceptado = true;
    }//GEN-LAST:event_jbAceptarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
       
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jtfNifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNifActionPerformed
       
    }//GEN-LAST:event_jtfNifActionPerformed

    private void jtfLimiteGastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfLimiteGastoActionPerformed
       
    }//GEN-LAST:event_jtfLimiteGastoActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
       if(jComboBox1.getSelectedIndex() == 0){
           this.tarifa = TarifaTelefonica.BASICA;
       } else if (jComboBox1.getSelectedIndex() == 1){
           this.tarifa = TarifaTelefonica.NORMAL;
       } else {
           this.tarifa = TarifaTelefonica.PREMIUM;
       }
    }//GEN-LAST:event_jComboBox1ActionPerformed
        public static double calcularCosteLlamada(TarifaTelefonica tarifa, TipoTelefono tipo, double duracion) {
        double coste = 0;
        switch (tipo) {
            case FIJO:
                if (tarifa == TarifaTelefonica.BASICA) {
                    coste = 0.13 * duracion;
                } else if (tarifa == TarifaTelefonica.NORMAL) {
                    coste = 0.1 * duracion;
                } else {
                    coste = 0 * duracion;
                }
                break;
            case MOVIL:
                if (tarifa == TarifaTelefonica.BASICA) {
                    coste = 0.22 * duracion;
                } else if (tarifa == TarifaTelefonica.NORMAL) {
                    coste = 0.2 * duracion;
                } else {
                    coste = 0 * duracion;
                }
                break;
            case GRATUITO:
                coste = 0;
                break;
            case COSTE_ADICIONAL:
                coste = 0.30 * duracion;
                break;
            case COSTE_COMPARTIDO:
                coste = 0.15 * duracion;
                break;
            default:
                throw new IllegalArgumentException("Error en el cálculo del costo de la llamada");
        }
        return coste;
    }
    
    public static TipoTelefono comprobarNumeroTelefono(String numero){
                TipoTelefono retorno = null;
        if (numero.matches("[89][1-8][0-9]{7}")) {
            retorno = TipoTelefono.FIJO;
        } else if (numero.matches("[6][0-9]\\d{7}|[7][1234]\\d{7}")) {
            retorno = TipoTelefono.MOVIL;
        } else if (numero.matches("[89][0][0][0-9]{6}")){
            retorno = TipoTelefono.GRATUITO;
        } else if (numero.matches("112|[0][0-9]{2}")){
            retorno = TipoTelefono.GRATUITO_ESPECIAL;
        } else if (numero.matches("[8][0][367][0-9]{6}|[9][0][57][0-9]{6}")){
            retorno = TipoTelefono.COSTE_ADICIONAL;
        } else if (numero.matches("[9][0][12][0-9]{6}")) {
            retorno = TipoTelefono.COSTE_COMPARTIDO;
        }
        return retorno;
    }

    public String getTarifa() {
        return tarifa.toString();
    }

    public void setTarifa(TarifaTelefonica tarifa) {
        this.tarifa = tarifa;
    }

    public String getJtfNif() {
        return jtfNif.getText();
    }

    public void setJtfNif(JTextField jtfNif) {
        this.jtfNif = jtfNif;
    }

    public String getJtfNumeroTlf() {
        return jtfNumeroTlf.getText();
    }

    public void setJtfNumeroTlf(JTextField jtfNumeroTlf) {
        this.jtfNumeroTlf = jtfNumeroTlf;
    }

    public String getJtfTitular() {
        return jtfTitular.getText();
    }

    public void setJtfTitular(JTextField jtfTitular) {
        this.jtfTitular = jtfTitular;
    }
    
    public boolean verificarTitular(String titular){
        return titular.matches("^.{15,80}$");
    }
    public boolean verificarPasswd(String passwd){
        return passwd.matches("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$");
    }
    
    public boolean aceptado(){
        return this.aceptado;
    }
    
    public boolean verificarNif(String NIF) {
                boolean nif = NIF.matches("[0-9]{8}[A-Za-z]") || // NIF
                NIF.matches("[XYZ][0-9]{7}[A-Za-z]") || // NIE
                NIF.matches("[ABCDEFGHJPQRSUVNW][0-9]{7}[A-Za-z]"); // CIF

        return nif;
    }
    public boolean verificarNumero(String numero){
        boolean verificar = false;
        if (numero.charAt(0) == '9' || numero.charAt(0) == '8' || numero.charAt(0) == '6' || numero.charAt(0) == '7') {
            verificar = true;
        }
        return verificar;
    }
        public boolean verificarLimite(int limite) {
        
        boolean value = false;
        if (limite > 10 && limite < 5000) {
            value = true;
        }
        return value;
    }
    /**
     * @param args the command line arguments
     */
        

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionarLineas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionarLineas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionarLineas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarLineas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GestionarLineas dialog = new GestionarLineas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton jbAceptar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JTextField jtfLimiteGasto;
    private javax.swing.JTextField jtfNif;
    private javax.swing.JTextField jtfNumeroTlf;
    private javax.swing.JTextField jtfPasswd;
    private javax.swing.JTextField jtfTitular;
    // End of variables declaration//GEN-END:variables
}
